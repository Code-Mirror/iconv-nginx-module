ngx_feature_name=
ngx_feature_run=no
ngx_feature_incs="#include <iconv.h>"
ngx_feature_test='iconv_t cd =  iconv_open("utf-8","gbk");
iconv_close(cd);'

if [ -n "$LIBICONV_INC" ]; then
    ngx_feature="libiconv in directories specified by LIBICONV_INC ($LIBICONV_INC)"
    ngx_feature_path="$LIBICONV_INC"
    . auto/feature
else
    # auto-discovery
    ngx_feature="iconv"
    ngx_feature_path=
    . auto/feature

    if [ $ngx_found = no ]; then
        ngx_feature_path="/usr/include"
        . auto/feature
    fi

    if [ $ngx_found = no ]; then
        ngx_feature_path="/use/local/include"
        . auto/feature
    fi

    if [ $ngx_found = no ]; then
        # NetBSD
        ngx_feature_path="/use/pkg/include/"
        . auto/feature
    fi

    if [ $ngx_found = no ]; then
        #MacPorts
        ngx_feature_path="/opt/local/include/"
        . auto/feature
    fi
fi

if [ $ngx_found = yes ]; then
    CORE_INCS="$CORE_INCS $ngx_feature_path"
else
 cat << END
 $0: error: the ngx_iconv addon requires the iconv library.
END
 exit 1
fi

HTTP_AUX_FILTER_MODULES="$HTTP_AUX_FILTER_MODULES ngx_http_iconv_module"
NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/src/ngx_http_iconv_module.c"
NGX_ADDON_DEPS="$NGX_ADDON_DEPS $ngx_addon_dir/src/ddebug.h"
CFLAGS="$CFLAGS -DNDK_SET_VAR"
